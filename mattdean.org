#+TITLE: Matt Dean's Emacs configuration
#+OPTIONS: toc:4 h:4

* Configuration
** About this configuration
   
   This configuration is inspired by the [[http://dl.dropboxusercontent.com/u/3968124/sacha-emacs.html#sec-1][Sacha Chua's literate config
   file]] and is partially an exploration into the idea of literate
   programming, particularly via org-mode.

** Emacs initialization

Load common package archives.

#+BEGIN_SRC emacs-lisp
  (require 'package)
  (setq package-archives '())             ; Start fresh
  (add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/") t)
  
  (when (not package-archive-contents)
    (package-refresh-contents))
#+END_SRC

*** Helper functions

The following function will install a package if needed. It is taken from [[http://dl.dropboxusercontent.com/u/3968124/sacha-emacs.html#sec-1-3-5][Sacha
Chua's config]].

#+BEGIN_SRC emacs-lisp
  (defun my/package-install (package &optional repository)
    "Install PACKAGE if it has not yet been installed.
  If REPOSITORY is specified, use that."
    (unless (package-installed-p package)
      (let ((package-archives (if repository
                                  (list (assoc repository package-archives))
                                package-archives)))
        (package-install package))))
#+END_SRC

** General configuration

*** Backups

The following will store backups in =~/.emacs.d/backups= instead of in the same
directory as the original.

#+BEGIN_SRC emacs-lisp
  (setq backup-directory-alist '(("." . "~/.emacs.d/backups")))
  
  (setq delete-old-versions -1)
  (setq version-control t)
  (setq auto-save-file-name-transforms '((".*" "~/.emacs.d/auto-save-list" t)))  
#+END_SRC

** Mode/package-specific configuration

*** org-mode

**** TODO Learn org-mode (I suspect this will be a long-lived TODO)

#+BEGIN_SRC emacs-lisp
  (add-to-list 'load-path "~/.emacs.d/submodules/org-mode/lisp")
  (add-to-list 'load-path "~/.emacs.d/submodules/org-mode/contrib/lisp")
    
  (require 'ox-gfm)                       ; Support export to GitHub
                                          ; Flavored Markdown
#+END_SRC

*** magit

#+BEGIN_SRC emacs-lisp
  (my/package-install 'magit)
#+END_SRC

*** Install packages

#+BEGIN_SRC emacs-lisp
  (defvar my-packages '())
#+END_SRC

**** better-defaults

#+BEGIN_QUOTE
... this package focuses a few changes that have near-universal appeal, lovingly hand-selected by inhabitants of the #emacs channel on Freenode.
#+END_QUOTE

[[https://github.com/technomancy/better-defaults][GitHub Repo]]

#+BEGIN_SRC emacs-lisp
  (add-to-list 'my-packages 'better-defaults)
#+END_SRC

**** Clojure modes and tools

***** TODO Add clojure-mode, clojure-test-mode, and cider keystrokes to Anki

#+BEGIN_SRC emacs-lisp
  (add-to-list 'my-packages 'clojure-mode t)
  (add-to-list 'my-packages 'clojure-test-mode t)
  (add-to-list 'my-packages 'cider t)
  (add-to-list 'my-packages 'clj-refactor t)
#+END_SRC

**** General lisp editing
